// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prodata_ccenginer.pro
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from prodata_ccenginer.pro</summary>
public static partial class ProdataCcenginerReflection {

  #region Descriptor
  /// <summary>File descriptor for prodata_ccenginer.pro</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ProdataCcenginerReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChVwcm9kYXRhX2NjZW5naW5lci5wcm8iXgoHTXNnX1MyQxIZCgdwcm90b0lk",
          "GAEgASgOMgguUHJvdG9JZBIpCg9zeXN0ZW1FcnJvcl9TMkMYAiABKAsyEC5T",
          "eXN0ZW1FcnJvcl9TMkMSDQoFdG9rZW4YAyABKAkiXwoHTXNnX0MyUxIZCgdw",
          "cm90b0lkGAEgASgOMgguUHJvdG9JZBIMCgRkYXRhGAIgASgMEgsKA3NlcRgD",
          "IAEoBRIPCgdtc2dUeXBlGAQgASgFEg0KBXRva2VuGAUgASgJIg0KC1N5c3Rl",
          "bUhlYXJ0Ih8KD1N5c3RlbUVycm9yX1MyQxIMCgRjb2RlGAEgASgJKj0KB1By",
          "b3RvSWQSCAoETk9ORRAAEhEKDFNZU1RFTV9IRUFSVBDpBxIVChBTWVNURU1f",
          "RVJST1JfUzJDEOoHYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ProtoId), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Msg_S2C), global::Msg_S2C.Parser, new[]{ "ProtoId", "SystemErrorS2C", "Token" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Msg_C2S), global::Msg_C2S.Parser, new[]{ "ProtoId", "Data", "Seq", "MsgType", "Token" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SystemHeart), global::SystemHeart.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SystemError_S2C), global::SystemError_S2C.Parser, new[]{ "Code" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
/// <summary>
/// 协议号的枚举   
/// </summary>
public enum ProtoId {
  [pbr::OriginalName("NONE")] None = 0,
  /// <summary>
  /// 心跳
  /// </summary>
  [pbr::OriginalName("SYSTEM_HEART")] SystemHeart = 1001,
  /// <summary>
  /// 系统错误
  /// </summary>
  [pbr::OriginalName("SYSTEM_ERROR_S2C")] SystemErrorS2C = 1002,
}

#endregion

#region Messages
public sealed partial class Msg_S2C : pb::IMessage<Msg_S2C> {
  private static readonly pb::MessageParser<Msg_S2C> _parser = new pb::MessageParser<Msg_S2C>(() => new Msg_S2C());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Msg_S2C> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ProdataCcenginerReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Msg_S2C() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Msg_S2C(Msg_S2C other) : this() {
    protoId_ = other.protoId_;
    SystemErrorS2C = other.systemErrorS2C_ != null ? other.SystemErrorS2C.Clone() : null;
    token_ = other.token_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Msg_S2C Clone() {
    return new Msg_S2C(this);
  }

  /// <summary>Field number for the "protoId" field.</summary>
  public const int ProtoIdFieldNumber = 1;
  private global::ProtoId protoId_ = 0;
  /// <summary>
  /// 协议号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ProtoId ProtoId {
    get { return protoId_; }
    set {
      protoId_ = value;
    }
  }

  /// <summary>Field number for the "systemError_S2C" field.</summary>
  public const int SystemErrorS2CFieldNumber = 2;
  private global::SystemError_S2C systemErrorS2C_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SystemError_S2C SystemErrorS2C {
    get { return systemErrorS2C_; }
    set {
      systemErrorS2C_ = value;
    }
  }

  /// <summary>Field number for the "token" field.</summary>
  public const int TokenFieldNumber = 3;
  private string token_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Token {
    get { return token_; }
    set {
      token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Msg_S2C);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Msg_S2C other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ProtoId != other.ProtoId) return false;
    if (!object.Equals(SystemErrorS2C, other.SystemErrorS2C)) return false;
    if (Token != other.Token) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ProtoId != 0) hash ^= ProtoId.GetHashCode();
    if (systemErrorS2C_ != null) hash ^= SystemErrorS2C.GetHashCode();
    if (Token.Length != 0) hash ^= Token.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ProtoId != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) ProtoId);
    }
    if (systemErrorS2C_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(SystemErrorS2C);
    }
    if (Token.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Token);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ProtoId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ProtoId);
    }
    if (systemErrorS2C_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SystemErrorS2C);
    }
    if (Token.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Msg_S2C other) {
    if (other == null) {
      return;
    }
    if (other.ProtoId != 0) {
      ProtoId = other.ProtoId;
    }
    if (other.systemErrorS2C_ != null) {
      if (systemErrorS2C_ == null) {
        systemErrorS2C_ = new global::SystemError_S2C();
      }
      SystemErrorS2C.MergeFrom(other.SystemErrorS2C);
    }
    if (other.Token.Length != 0) {
      Token = other.Token;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          protoId_ = (global::ProtoId) input.ReadEnum();
          break;
        }
        case 18: {
          if (systemErrorS2C_ == null) {
            systemErrorS2C_ = new global::SystemError_S2C();
          }
          input.ReadMessage(systemErrorS2C_);
          break;
        }
        case 26: {
          Token = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class Msg_C2S : pb::IMessage<Msg_C2S> {
  private static readonly pb::MessageParser<Msg_C2S> _parser = new pb::MessageParser<Msg_C2S>(() => new Msg_C2S());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Msg_C2S> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ProdataCcenginerReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Msg_C2S() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Msg_C2S(Msg_C2S other) : this() {
    protoId_ = other.protoId_;
    data_ = other.data_;
    seq_ = other.seq_;
    msgType_ = other.msgType_;
    token_ = other.token_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Msg_C2S Clone() {
    return new Msg_C2S(this);
  }

  /// <summary>Field number for the "protoId" field.</summary>
  public const int ProtoIdFieldNumber = 1;
  private global::ProtoId protoId_ = 0;
  /// <summary>
  /// 协议号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ProtoId ProtoId {
    get { return protoId_; }
    set {
      protoId_ = value;
    }
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 2;
  private pb::ByteString data_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Data {
    get { return data_; }
    set {
      data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "seq" field.</summary>
  public const int SeqFieldNumber = 3;
  private int seq_;
  /// <summary>
  ///  序列，默认0
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Seq {
    get { return seq_; }
    set {
      seq_ = value;
    }
  }

  /// <summary>Field number for the "msgType" field.</summary>
  public const int MsgTypeFieldNumber = 4;
  private int msgType_;
  /// <summary>
  ///  0=push, 1=req, 2=resp  
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MsgType {
    get { return msgType_; }
    set {
      msgType_ = value;
    }
  }

  /// <summary>Field number for the "token" field.</summary>
  public const int TokenFieldNumber = 5;
  private string token_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Token {
    get { return token_; }
    set {
      token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Msg_C2S);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Msg_C2S other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ProtoId != other.ProtoId) return false;
    if (Data != other.Data) return false;
    if (Seq != other.Seq) return false;
    if (MsgType != other.MsgType) return false;
    if (Token != other.Token) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ProtoId != 0) hash ^= ProtoId.GetHashCode();
    if (Data.Length != 0) hash ^= Data.GetHashCode();
    if (Seq != 0) hash ^= Seq.GetHashCode();
    if (MsgType != 0) hash ^= MsgType.GetHashCode();
    if (Token.Length != 0) hash ^= Token.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ProtoId != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) ProtoId);
    }
    if (Data.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Data);
    }
    if (Seq != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Seq);
    }
    if (MsgType != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(MsgType);
    }
    if (Token.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Token);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ProtoId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ProtoId);
    }
    if (Data.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
    }
    if (Seq != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seq);
    }
    if (MsgType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgType);
    }
    if (Token.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Msg_C2S other) {
    if (other == null) {
      return;
    }
    if (other.ProtoId != 0) {
      ProtoId = other.ProtoId;
    }
    if (other.Data.Length != 0) {
      Data = other.Data;
    }
    if (other.Seq != 0) {
      Seq = other.Seq;
    }
    if (other.MsgType != 0) {
      MsgType = other.MsgType;
    }
    if (other.Token.Length != 0) {
      Token = other.Token;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          protoId_ = (global::ProtoId) input.ReadEnum();
          break;
        }
        case 18: {
          Data = input.ReadBytes();
          break;
        }
        case 24: {
          Seq = input.ReadInt32();
          break;
        }
        case 32: {
          MsgType = input.ReadInt32();
          break;
        }
        case 42: {
          Token = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class SystemHeart : pb::IMessage<SystemHeart> {
  private static readonly pb::MessageParser<SystemHeart> _parser = new pb::MessageParser<SystemHeart>(() => new SystemHeart());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SystemHeart> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ProdataCcenginerReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SystemHeart() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SystemHeart(SystemHeart other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SystemHeart Clone() {
    return new SystemHeart(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SystemHeart);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SystemHeart other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SystemHeart other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class SystemError_S2C : pb::IMessage<SystemError_S2C> {
  private static readonly pb::MessageParser<SystemError_S2C> _parser = new pb::MessageParser<SystemError_S2C>(() => new SystemError_S2C());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SystemError_S2C> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ProdataCcenginerReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SystemError_S2C() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SystemError_S2C(SystemError_S2C other) : this() {
    code_ = other.code_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SystemError_S2C Clone() {
    return new SystemError_S2C(this);
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 1;
  private string code_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Code {
    get { return code_; }
    set {
      code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SystemError_S2C);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SystemError_S2C other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Code != other.Code) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Code.Length != 0) hash ^= Code.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Code.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Code);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Code.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SystemError_S2C other) {
    if (other == null) {
      return;
    }
    if (other.Code.Length != 0) {
      Code = other.Code;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Code = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
